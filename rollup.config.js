import typescript from "@rollup/plugin-typescript";
import { nodeResolve } from "@rollup/plugin-node-resolve";
import rollupJson from "@rollup/plugin-json";
import commonjs from "@rollup/plugin-commonjs";
import execute from "rollup-plugin-execute";
import path from "path";

const isProd = process.env.BUILD === "production";

const currentDir = path.dirname(__filename);

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/
`;

export default {
  input: "src/main.ts",
  output: {
    dir: "obsidian_local_images_plus_pro_latest",
    sourcemap: "inline",
    sourcemapExcludeSources: isProd,
    format: "cjs",
    exports: "default",
    banner,
  },
  external: ["obsidian"],
  plugins: [
    execute([
      ` mkdir -p ${currentDir}/obsidian_local_images_plus_pro_latest`,
      ` cp -u ${currentDir}/manifest.json ${currentDir}/obsidian_local_images_plus_pro_latest/manifest.json`,
      ` cp -u ${currentDir}/styles.css ${currentDir}/obsidian_local_images_plus_pro_latest/styles.css`,
    ]),
    typescript(),
    nodeResolve({ browser: true }),
    rollupJson(),
    commonjs(),
  ],
  onwarn(warning, warn) {
    // workaround to prevent rollup build error
    if (
      warning.code === "EVAL" &&
      /.*\/node_modules\/file-type\/.*/.test(warning.loc.file)
    ) {
      return;
    }
    warn(warning);
  },
};
