name: Build obsidian plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 添加手动触发事件
    inputs:
      tag_name:
        description: 'Version tag for the release'
        required: false
        default: ''  # 默认为空，也可以设置一个默认值

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build --if-present
      - name: Copy styles.css
        run: cp ./styles.css ./obsidian_local_images_plus_pro_latest/styles.css
      - name: Package build
        run: zip -r obsidian_local_images_plus_pro_latest.zip ./obsidian_local_images_plus_pro_latest
      - name: Extract version
        run: |
          tag_name=${{ github.event.inputs.tag_name }}  # 使用手动输入的 tag_name
          if [ -z "$tag_name" ]; then  # 如果没有手动输入，则从 manifest.json 提取
            tag_name=$(grep -Po '"version"\s*:\s*"\K[^"]+' manifest.json)
          fi
          echo "tag_name=$tag_name" >> $GITHUB_ENV
          echo "Extracted version: $tag_name"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_name }}
          release_name: ${{ env.tag_name }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        id: upload-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./obsidian_local_images_plus_pro_latest.zip
          asset_name: obsidian_local_images_plus_pro_latest-${{ env.tag_name }}.zip
          asset_content_type: application/zip
      - name: Upload Release Assets
        id: upload-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./styles.css
          asset_name: styles.css
          asset_content_type: text/css
      - name: Upload Release Assets
        id: upload-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json
      - name: Upload Release Assets
        id: upload-assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./obsidian_local_images_plus_pro_latest/main.js
          asset_name: main.js
          asset_content_type: text/javascript